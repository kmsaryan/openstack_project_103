#!/bin/bash
#private key is to be given as 3rd argument.
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <openrc> <tag> <ssh_key>"
    exit 1
fi

OPENRC=$1
TAG=$2
SSH_KEY=$3


# Function to check and install necessary dependencies
install_dependencies() {
    echo "Checking and installing necessary dependencies..."
    if ! command -v python3 &> /dev/null; then
        sudo apt update
        sudo apt install -y python3
    fi
    if ! command -v pip3 &> /dev/null; then
        sudo apt install -y python3-pip
    fi
    if ! command -v openstack &> /dev/null; then
        sudo apt install -y python3-openstackclient
    fi
    if ! command -v ansible &> /dev/null; then
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt install -y ansible
    fi
    if ! dpkg-query -W -f='${Status}' software-properties-common 2>/dev/null | grep -q "ok installed"; then
        sudo apt install -y software-properties-common
    fi
    pip3 install python-openstackclient argparse subprocess32 python-openstacksdk
}

# Function to set up permissions
setup_permissions() {
    chmod 777 scripts/install.py
    chmod 777 scripts/gen_config.py
    chmod 777 scripts/site.yaml
    chmod 777 operate
    chmod 777 cleanup
}
# Function to invoke the Python script


invoke_python_script() {
    source $OPENRC
    echo "sourced $OPENRC"
    echo "Executing install.py..."
    python3 scripts/install.py $OPENRC $TAG $SSH_KEY
    sleep 10
    echo "Generating config file..."
    python3 scripts/gen_config.py $TAG $SSH_KEY
    sleep 20 
    echo " Executing ansible-playbook.."
    ansible-playbook -i hosts scripts/site.yaml 
    }
    exit 1

# Main script execution
install_dependencies
setup_permissions
invoke_python_script
exit 1