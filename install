#!/bin/bash
#private key is to be given as 3rd argument.
if [ "$#" -ne 3 ]; then
    echo "Usage: $0 <openrc> <tag> <ssh_key>"
    exit 1
fi
OPENRC=$1
TAG=$2
SSH_KEY=$3
SERVERS_FIP="servers_fip"

# Function to check and install necessary dependencies
install_dependencies() {
    # Check and install software-properties-common
    if ! dpkg-query -W -f='${Status}' software-properties-common 2>/dev/null | grep -q "ok installed"; then
        echo "Installing software-properties-common..."
        sudo apt install -y software-properties-common
    else
        echo "software-properties-common already installed."
    fi

    # Check and install ansible
    if ! command -v ansible &> /dev/null; then
        echo "Installing ansible..."
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt install -y ansible
    else
        echo "ansible already installed."
    fi

    # Check and install Python 3.8.4
    PYTHON_VERSION=$(python3 --version 2>&1)
    if [[ "$PYTHON_VERSION" != "Python 3.8.4" ]]; then
        echo "Installing Python 3.8.4..."
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt update
        sudo apt install -y python3.8
        sudo apt install -y python3.8-venv python3.8-dev
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1
    else
        echo "Python 3.8 already installed."
    fi

    # Ensure pip is up to date
    sudo apt install -y python3-pip
    sudo pip3 install --upgrade pip

    # Install required Python packages
    sudo pip3 install platformdirs
    sudo pip3 install python-openstackclient argparse subprocess32 python-openstacksdk


# Function to set up permissions
setup_permissions() {
    chmod 777 scripts/Deploy.py
    chmod 777 scripts/gen_config.py
    chmod 777 scripts/site.yaml
    chmod 777 operate
    chmod 777 cleanup
}

# Function to invoke the Python script
invoke_python_script() {
    source $OPENRC
    echo "sourced $OPENRC"
    python3 scripts/Deploy.py $OPENRC $TAG $SSH_KEY || exit 1
    echo "executing next script"
    python3 scripts/gen_config.py $TAG $SSH_KEY || exit 1
    echo "python script executed"
}

function ssh_to_servers {
    local servers_file=$1
    local ssh_key=$2
    if [ ! -f "$servers_file" ]; then
        echo "File $servers_file not found!"
        exit 1
    fi
    # Read the file and store IP addresses in variables
    local count=1
    while IFS=: read -r host ip; do
        ip=$(echo "$ip" | xargs)  # Trim any potential whitespace
        if [ $count -eq 1 ]; then
            host1=$ip
        elif [ $count -eq 2 ]; then
            host2=$ip
        elif [ $count -eq 3 ]; then
            host3=$ip
        fi
        count=$((count + 1))
    done < "$servers_file"

    # Perform SSH connections
    if [ -n "$host1" ]; then
        #echo "Connecting to Host1 at $host1"
        ssh -i "$ssh_key" -t ubuntu@"$host1" "echo '$(cat $ssh_key)' > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && exit"
    fi
    if [ -n "$host2" ]; then
        #echo "Connecting to Host2 at $host2"
        ssh -i "$ssh_key" -t ubuntu@"$host2" "echo '$(cat $ssh_key)' > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && exit"
    fi
    if [ -n "$host3" ]; then
        #echo "Connecting to Host3 at $host3"
        ssh -i "$ssh_key" -t ubuntu@"$host3" "echo '$(cat $ssh_key)' > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && exit"
    fi
}

ansible_playbook() {    
    echo "Executing ansible-playbook.."
    # Set the ANSIBLE_CONFIG environment variable
    export ANSIBLE_CONFIG=ansible.cfg
    echo "Ansible config set to $ANSIBLE_CONFIG"
    sleep 20
    ansible all -m ping -i hosts || exit 1
    if [ $? -eq 0 ]; then
        echo "Ping successful to hosts."    
        echo "Executing ansible-playbook.."
        ansible-playbook -i hosts scripts/site.yaml || exit 1
    else
        echo "Ping not successful to hosts."
    fi
}

# Main script execution
install_dependencies
setup_permissions
invoke_python_script
ssh_to_servers $SERVERS_FIP $SSH_KEY
ansible_playbook
exit 1
echo "Installation and configuration completed successfully."
